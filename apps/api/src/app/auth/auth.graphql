scalar Date

type Query {
	isAvailable(findUser: FindUserInput!): Is_User_Available!
	logout: Authentication_Status!
}

type Mutation {
	signup(user: SignupInput!): Authentication_Status!
	login(user: LoginInput!): Authentication_Status!
	forgotPassword(user: ForgotPasswordInput!): Authentication_Status!
	resetPasswordToken(
		credentials: Reset_Password_With_JWT_Input!
	): Authentication_Status!
}

input SignupInput {
	email: String!

	password: String!

	birthDate: String!
}

input LoginInput {
	email: String!

	password: String!
}

input ForgotPasswordInput {
	email: String!
}

input FindUserInput {
	id: String

	username: String

	email: String
}

input Reset_Password_With_JWT_Input {
	password: String!

	confirmPassword: String!

	token: String!
}

type User {
	_id: String

	username: String

	email: String

	locale: String

	profilePicture: String

	birthDate: String

	gender: String

	createdAt: Date
}

type Is_User_Available {
	available: Boolean!
}

type Authentication_Status {
	status: String!

	authenticated: Boolean
}
