scalar Date

type Query {
	isAvailable(findUser: Find_User_Input!): Is_User_Available!
	isAuthenticated: Authentication_Status!
	logout: Authentication_Status!
}

type Mutation {
	signup(user: Signup_Input!): Authentication_Status!
	login(user: Login_Input!): Authentication_Status!
	sendForgotPasswordEmail(
		user: Send_Forgot_Password_Email_Input!
	): Authentication_Status!
	confirmForgotPassword(
		credentials: Confirm_Forgot_Password_Input!
	): Authentication_Status!
}

input Signup_Input {
	email: String!

	password: String!

	birthDate: String!
}

input Login_Input {
	email: String!

	password: String!
}

input Send_Forgot_Password_Email_Input {
	email: String!
}

input Find_User_Input {
	# id: String

	username: String

	# email: String
}

input Confirm_Forgot_Password_Input {
	password: String!

	confirmPassword: String!

	token: String!
}

type User {
	_id: String

	username: String

	email: String

	locale: String

	profilePicture: String

	birthDate: String

	gender: String

	createdAt: Date
}

type Is_User_Available {
	available: Boolean!
}

type Authentication_Status {
	status: String!

	authenticated: Boolean
}
